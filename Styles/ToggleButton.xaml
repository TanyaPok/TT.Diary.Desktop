<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1" StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Height" Value="32" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource ToggleButton.Background}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource Button.BorderBrush}" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" CornerRadius="10" BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Ellipse Grid.Column="0" x:Name="offEllipse" Height="25" Width="25"
                                     Fill="{DynamicResource ToggleButton.Ellipse.Fill}" Margin="2,0,0,0" />
                            <ContentPresenter Grid.Column="1" x:Name="contentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <Ellipse Grid.Column="2" x:Name="onEllipse" Height="25" Width="25"
                                     Fill="{DynamicResource ToggleButton.Ellipse.Fill}" Margin="0,0,2,0" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource self}}" Value="true">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="Background.(SolidColorBrush.Opacity)">
                                            <LinearDoubleKeyFrame Value="0.7" KeyTime="0:0:0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="Background.(SolidColorBrush.Opacity)">
                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border"
                                    Value="{DynamicResource Button.Disabled.Background}" />
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{DynamicResource Button.Disabled.Border}" />
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter"
                                    Value="{DynamicResource Button.Disabled.Foreground}" />
                            <Setter Property="Fill" TargetName="offEllipse"
                                    Value="{DynamicResource Button.Disabled.Foreground}" />
                            <Setter Property="Fill" TargetName="onEllipse"
                                    Value="{DynamicResource Button.Disabled.Foreground}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="offEllipse" Value="Hidden" />
                            <Setter Property="Visibility" TargetName="onEllipse" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Visibility" TargetName="offEllipse" Value="Visible" />
                            <Setter Property="Visibility" TargetName="onEllipse" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SimpleToggleButtonStyle" TargetType="{x:Type ToggleButton}"
           BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{DynamicResource Base.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Button.BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Effect" TargetName="contentPresenter">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Direction="0" Color="Black" Opacity="1"
                                                      BlurRadius="1" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border"
                                    Value="{DynamicResource Button.Checked.Background}" />
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{DynamicResource Button.Pressed.Border}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource Base.Background}" />
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{DynamicResource Button.BorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border"
                                    Value="{DynamicResource Button.Disabled.Background}" />
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{DynamicResource Button.Disabled.Border}" />
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter"
                                    Value="{DynamicResource Button.Disabled.Foreground}" />
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>